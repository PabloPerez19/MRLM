knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(kableExtra)
library(GGally)
library(rsm)
library(car)
ggplot2::theme_set(ggplot2::theme_bw())
data <- read.csv("AdmissionPredict.csv", sep=",", dec=".")
data <- data[1:100, -c(1,4,8)]
y <- select(data, Chance.of.Admit)
x <- select(data, -c(Chance.of.Admit))
#Matriz de dispersión con histogramas en la diagonal
gg2<-ggpairs(data,upper=list(continuous = wrap("smooth",alpha = 0.3, size=1.2,method = "lm")),lower=list(continuous ="cor"))
for(i in 1:ncol(data)){
gg2[i,i]<-gg2[i,i]+
geom_histogram(breaks=hist(data[,i],breaks = "FD",plot=F)$breaks,
colour = "red",fill="lightgoldenrod1")
}
gg2
model = lm(data$Chance.of.Admit~., data)
summary(model) #¿ésto no debe incluirse?
tabla.coef <- summary(model)$coefficients
row.names(tabla.coef) <- c("$\\beta_0$", "$\\beta_1$", "$\\beta_2$", "$\\beta_3$", "$\\beta_4$", "$\\beta_5$")
tabla.coef %>%
kable(row.names = T, escape = F,
col.names = c("Estimación", "Error estándar", "$T_0$", "Valor P"),
align = "c", caption = "Resumen de los coeficientes", booktab = T, digits = 4) %>%
kable_styling(latex_options = "HOLD_position")
kable(anova(rsm(Chance.of.Admit~FO(GRE.Score,TOEFL.Score,SOP,LOR,CGPA), data = data)), caption = 'Tabla ANOVA para el modelo')
kable(anova(rsm(Chance.of.Admit~FO(GRE.Score,TOEFL.Score,SOP,LOR,CGPA), data = data)), caption = "Tabla ANOVA para el modelo")
kable(anova(rsm(Chance.of.Admit~FO(GRE.Score,TOEFL.Score,SOP,LOR,CGPA), data = data)))
kable(anova(rsm(Chance.of.Admit~FO(GRE.Score,TOEFL.Score,SOP,LOR,CGPA), data = data)))
kbl(anova(rsm(Chance.of.Admit~FO(GRE.Score,TOEFL.Score,SOP,LOR,CGPA), data = data)))
kbl(anova(rsm(Chance.of.Admit~FO(GRE.Score,TOEFL.Score,SOP,LOR,CGPA), data = data)), caption = "Tabla ANOVA para el modelo")
kbl(anova(rsm(Chance.of.Admit~FO(GRE.Score,TOEFL.Score,SOP,LOR,CGPA), data = data)), caption = "Tabla ANOVA para el modelo")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(kableExtra)
library(GGally)
library(rsm)
library(car)
ggplot2::theme_set(ggplot2::theme_bw())
data <- read.csv("AdmissionPredict.csv", sep=",", dec=".")
data <- data[1:100, -c(1,4,8)]
y <- select(data, Chance.of.Admit)
x <- select(data, -c(Chance.of.Admit))
#Matriz de dispersión con histogramas en la diagonal
gg2<-ggpairs(data,upper=list(continuous = wrap("smooth",alpha = 0.3, size=1.2,method = "lm")),lower=list(continuous ="cor"))
for(i in 1:ncol(data)){
gg2[i,i]<-gg2[i,i]+
geom_histogram(breaks=hist(data[,i],breaks = "FD",plot=F)$breaks,
colour = "red",fill="lightgoldenrod1")
}
gg2
model = lm(data$Chance.of.Admit~., data)
summary(model) #¿ésto no debe incluirse?
tabla.coef <- summary(model)$coefficients
row.names(tabla.coef) <- c("$\\beta_0$", "$\\beta_1$", "$\\beta_2$", "$\\beta_3$", "$\\beta_4$", "$\\beta_5$")
tabla.coef %>%
kable(row.names = T, escape = F,
col.names = c("Estimación", "Error estándar", "$T_0$", "Valor P"),
align = "c", caption = "Resumen de los coeficientes", booktab = T, digits = 4) %>%
kable_styling(latex_options = "HOLD_position")
kbl(anova(rsm(Chance.of.Admit~FO(GRE.Score,TOEFL.Score,SOP,LOR,CGPA), data = data)), caption = "Tabla ANOVA para el modelo")
kable(summary(model)$r.squared, caption = "Multiple R-squared")
kable_as_image(anova(rsm(Chance.of.Admit~FO(GRE.Score,TOEFL.Score,SOP,LOR,CGPA), data = data)), caption = "Tabla ANOVA para el modelo")
anova(rsm(Chance.of.Admit~FO(GRE.Score,TOEFL.Score,SOP,LOR,CGPA)))
library(car)
library(rsm)
library(rgl)
library(perturbR)
library(scatterplot3d)
library(GGally)
ggplot2::theme_set(ggplot2::theme_bw())
library(car)
library(rsm)
library(rgl)
library(perturbR)
library(scatterplot3d)
library(GGally)
ggplot2::theme_set(ggplot2::theme_bw())
#LEER DATOS EN archivo asignado a su grupo, asi
datos=read.table(file.choose(),header=T,sep=",",dec=".")
datos=datos[1:100,-c(1,4,8)]
names(datos)
dim(datos)
attach(datos)
#MATRIZ DE DISPERSION
#Matriz de dispersion con histogramas en la diagonal
gg2<-ggpairs(datos,upper=list(continuous = wrap("smooth",alpha = 0.3, size=1.2,
method = "lm")),lower=list(continuous ="cor"))
for(i in 1:ncol(datos)){
gg2[i,i]<-gg2[i,i]+
geom_histogram(breaks=hist(datos[,i],breaks = "FD",plot=F)$breaks,
colour = "red",fill="lightgoldenrod1")
}
gg2
ggpairs(datos,diag=list(continuous=wrap("box_no_facet",color="red",
fill="lightgoldenrod1",alpha=0.3)),
upper=list(continuous = wrap("smooth",alpha = 0.3, size=1.2,method = "lm")),
lower=list(continuous ="cor"))
#AJUSTANDO EL MODELO
modelo = lm(Chance.of.Admit~.,datos)
summary(modelo)
anova(rsm(Chance.of.Admit~FO(GRE.Score,TOEFL.Score,SOP,LOR,CGPA)))
#Pruebas de hipotesis: H0: B1 = B2 = B3 = B4 = B5 = 0 vs HA: Algún Bj =/= 0 Para al menos un j, j = 1,2,3,4,5
#p-value = 2.2e-16 < alpha
#Hay evidencia para rechazar H0. Por lo tanto el modelo es globalmente significativo, al menos una de las pruebas ayuda a explicar la variabilidad de las chances de admision
Anova(modelo)
#CREANDO FUNCION PARA EXTRAER COEFICIENTES ESTIMADOS SUS IC DEL 95, VIF'S Y
#COEFICIENTES ESTANDARIZADOS
miscoeficientes <- function (modelo,datos){
coefi <- coef (modelo)
datos2 <- as.data.frame (scale(datos))
coef.std=c(0, coef (lm(update (formula(modelo),~.+0),datos2)))
limites=confint (modelo,level=0.95)
vifs=c (0,vif (modelo))
resul=data.frame (Estimación=coefi,Limites=limites,Vif=vifs,Coef.Std=coef.std)
cat("Coeficientes estimados, sus I.C, Vifs y Coeficientes estimados estandarizados","\n")
resul
}
#Obtencion de tabla 4.10
miscoeficientes (modelo,datos)
anova(rsm(Chance.of.Admit~FO(GRE.Score,TOEFL.Score,SOP,LOR,CGPA)))
#Pruebas de hipotesis: H0: B1 = B2 = B3 = B4 = B5 = 0 vs HA: Algún Bj =/= 0 Para al menos un j, j = 1,2,3,4,5
#p-value = 2.2e-16 < alpha
#Hay evidencia para rechazar H0. Por lo tanto el modelo es globalmente significativo, al menos una de las pruebas ayuda a explicar la variabilidad de las chances de admision
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(kableExtra)
library(GGally)
library(rsm)
library(car)
ggplot2::theme_set(ggplot2::theme_bw())
kable(anova(rsm(Chance.of.Admit~FO(GRE.Score,TOEFL.Score,SOP,LOR,CGPA), data = data)), caption = "Tabla ANOVA para el modelo")
(anova(rsm(Chance.of.Admit~FO(GRE.Score,TOEFL.Score,SOP,LOR,CGPA), data = data)), caption = "Tabla ANOVA para el modelo")
(anova(rsm(Chance.of.Admit~FO(GRE.Score,TOEFL.Score,SOP,LOR,CGPA), data = data)))
#CREANDO FUNCION PARA EXTRAER COEFICIENTES ESTIMADOS SUS IC DEL 95, VIF'S Y
#COEFICIENTES ESTANDARIZADOS
miscoeficientes <- function (modelo,datos){
coefi <- coef (modelo)
datos2 <- as.data.frame (scale(datos))
coef.std=c(0, coef (lm(update (formula(modelo),~.+0),datos2)))
limites=confint (modelo,level=0.95)
vifs=c (0,vif (modelo))
resul=data.frame (Estimación=coefi,Limites=limites,Vif=vifs,Coef.Std=coef.std)
cat("Coeficientes estimados, sus I.C, Vifs y Coeficientes estimados estandarizados","\n")
resul
}
#Obtencion de tabla de coeficientes
kable(miscoeficientes (model,data))
#Obtencion de tabla de coeficientes
(miscoeficientes (model,data))
#CREANDO FUNCION PARA EXTRAER COEFICIENTES ESTIMADOS SUS IC DEL 95, VIF'S Y
#COEFICIENTES ESTANDARIZADOS
miscoeficientes <- function (modelo,datos){
coefi <- coef (modelo)
datos2 <- as.data.frame (scale(datos))
coef.std=c(0, coef (lm(update (formula(modelo),~.+0),datos2)))
limites=confint (modelo,level=0.95)
vifs=c (0,vif (modelo))
resul=data.frame (Estimación=coefi,Limites=limites,Vif=vifs,Coef.Std=coef.std)
cat("Coeficientes estimados, sus I.C, Vifs y Coeficientes estimados estandarizados","\n")
resul
}
#Obtencion de tabla de coeficientes
(miscoeficientes (model,data))
miscoeficientes()
miscoeficientes(model, data)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(kableExtra)
library(GGally)
library(rsm)
library(car)
ggplot2::theme_set(ggplot2::theme_bw())
data <- read.csv("AdmissionPredict.csv", sep=",", dec=".")
data <- data[1:100, -c(1,4,8)]
y <- select(data, Chance.of.Admit)
x <- select(data, -c(Chance.of.Admit))
#Matriz de dispersión con histogramas en la diagonal
gg2<-ggpairs(data,upper=list(continuous = wrap("smooth",alpha = 0.3, size=1.2,method = "lm")),lower=list(continuous ="cor"))
for(i in 1:ncol(data)){
gg2[i,i]<-gg2[i,i]+
geom_histogram(breaks=hist(data[,i],breaks = "FD",plot=F)$breaks,
colour = "red",fill="lightgoldenrod1")
}
gg2
model = lm(data$Chance.of.Admit~., data)
summary(model) #¿ésto no debe incluirse?
tabla.coef <- summary(model)$coefficients
row.names(tabla.coef) <- c("$\\beta_0$", "$\\beta_1$", "$\\beta_2$", "$\\beta_3$", "$\\beta_4$", "$\\beta_5$")
tabla.coef %>%
kable(row.names = T, escape = F,
col.names = c("Estimación", "Error estándar", "$T_0$", "Valor P"),
align = "c", caption = "Resumen de los coeficientes", booktab = T, digits = 4) %>%
kable_styling(latex_options = "HOLD_position")
kable(anova(rsm(Chance.of.Admit~FO(GRE.Score,TOEFL.Score,SOP,LOR,CGPA), data = data)), caption = "Tabla ANOVA para el modelo")
#CREANDO FUNCION PARA EXTRAER COEFICIENTES ESTIMADOS SUS IC DEL 95, VIF'S Y
#COEFICIENTES ESTANDARIZADOS
miscoeficientes <- function (modelo,datos){
coefi <- coef (modelo)
datos2 <- as.data.frame (scale(datos))
coef.std=c(0, coef (lm(update (formula(modelo),~.+0),datos2)))
limites=confint (modelo,level=0.95)
vifs=c (0,vif (modelo))
resul=data.frame (Estimación=coefi,Limites=limites,Vif=vifs,Coef.Std=coef.std)
cat("Coeficientes estimados, sus I.C, Vifs y Coeficientes estimados estandarizados","\n")
resul
}
miscoeficientes(model, data)
#Obtencion de tabla de coeficientes
kable(miscoeficientes (model,data))
#CREANDO FUNCION PARA EXTRAER COEFICIENTES ESTIMADOS SUS IC DEL 95, VIF'S Y
#COEFICIENTES ESTANDARIZADOS
miscoeficientes <- function (model,datos){
coefi <- coef (model)
datos2 <- as.data.frame (scale(datos))
coef.std=c(0, coef (lm(update (formula(model),~.+0),datos2)))
limites=confint (model,level=0.95)
vifs=c (0,vif (model))
resul=data.frame (Estimación=coefi,Limites=limites,Vif=vifs,Coef.Std=coef.std)
cat("Coeficientes estimados, sus I.C, Vifs y Coeficientes estimados estandarizados","\n")
resul
}
#Obtencion de tabla de coeficientes
kable(miscoeficientes (model,data))
#CREANDO FUNCION PARA EXTRAER COEFICIENTES ESTIMADOS SUS IC DEL 95, VIF'S Y
#COEFICIENTES ESTANDARIZADOS
miscoeficientes <- function (model,datos){
coefi <- coef (model)
datos2 <- as.data.frame (scale(datos))
coef.std=c(0, coef (lm(update (formula(model),~.+0),datos2)))
limites=confint (model,level=0.95)
vifs=c (0,vif (model))
resul=data.frame (Estimación=coefi,Limites=limites,Vif=vifs,Coef.Std=coef.std)
cat("Coeficientes estimados, sus I.C, Vifs y Coeficientes estimados estandarizados","\n")
resul
}
miscoeficientes(model, data)
#Obtencion de tabla de coeficientes
kable(miscoeficientes (model,data))
tabla.coef <- summary(model)$coefficients
row.names(tabla.coef) <- c("$\\beta_0$", "$\\beta_1$", "$\\beta_2$", "$\\beta_3$", "$\\beta_4$", "$\\beta_5$")
tabla.coef %>%
kable(row.names = T, escape = F,
col.names = c("Estimación", "Error estándar", "$T_0$", "Valor P"),
align = "c", caption = "Resumen de los coeficientes", booktab = T, digits = 4) %>%
kable_styling(latex_options = "HOLD_position")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(kableExtra)
library(GGally)
library(rsm)
library(car)
ggplot2::theme_set(ggplot2::theme_bw())
linearHypothesis(modelo, c('GRE.Score=0', 'LOR=0', 'CGPA=0'))
anova(modelo)
Anova(modelo)
anova(modelo)
Anova(modelo)
anova(modelo)
Anova(modelo)
#6.
linearHypothesis(modelo, c('GRE.Score=0', 'LOR=0', 'CGPA=0'))
residualPlots(model,tests=FALSE,type="rstudent",quadratic=FALSE,col=2,cex=0.5)
residualPlots(model,tests=FALSE,type="rstudent",quadratic=FALSE,col=4,cex=2)
residualPlots(model,tests=FALSE,type="rstudent",quadratic=FALSE,col=3,cex=2)
residualPlots(model,tests=FALSE,type="rstudent",quadratic=FALSE,col=2,cex=2)
